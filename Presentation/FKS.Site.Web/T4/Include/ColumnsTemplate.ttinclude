<#+
// <copyright file="IEntityRepositoryTemplate.tt" company="">
//  Copyright © . All Rights Reserved.
// </copyright>

public class ColumnsTemplate : CSharpTemplate
{
    private T4ModeController _model;
        
    public ColumnsTemplate(T4ModeController model)
    {
        _model = model;
    }

    /// <summary>
    /// 获取 生成的文件名，根据模型名定义
    /// </summary>
    public string FileName
    {
        get
        { 
            return string.Format("{0}.generated.js", _model.Name);
        }
    }

	public override string TransformText()
	{
#>
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//	   如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>


[[
                <#+ 
                    string field = string.Empty;
            
                    foreach(var prop in _model.Properties.Where(p => p.GetCustomAttributes(typeof(ViewModelAttribute)).Count() > 0))
                    {
                        ViewModelAttribute va = prop.GetCustomAttribute<ViewModelAttribute>();
                        var dis = prop.GetCustomAttribute< System.ComponentModel.DataAnnotations.DisplayAttribute>();
                        if(va.CanShow)
                        {                       
                    field= "{ field: '"+prop.Name+"', title: '"+(dis==null?"":dis.Name)+"', width: 120, sortable: false },";
                            #>
<#=field #>
                            <#+ 
                        }
                        } 
                #>
            ]];

                <#+ 
                    field = string.Empty;
            
                    foreach(var prop in _model.Properties.Where(p => p.GetCustomAttributes(typeof(ViewModelAttribute)).Count() > 0))
                    {
                ViewModelAttribute va = prop.GetCustomAttribute<ViewModelAttribute>();
                        if(va.CanShow)
                        {                       
                    field= "@Html.FormItem(model => model."+prop.Name+")";
                            #>
<#=field #>
                            <#+ 
                        }
                        } 
                #>

<#+
        return this.GenerationEnvironment.ToString();
	}
}
#>